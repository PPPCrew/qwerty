#!/bin/bash
oqwLTKUfnxTjvZIzaRvqIPtTxiOJmqifrLQgqHcdrVAtZVjWqvmQggbDlgAnoXnIRXRqWlYqFNscXMdueAnJWpgMglGNbVykUNYM="MIZGfqzGrUTPlHbiMppeSFTbVsiYiVFrhErNECIiTVgbwsPsDJlldcxNYKkwioQXanzqZHlVNWTvZYmTEPbqodXdqXyZuzrLFoLw";HOnfLjanBiGNJGzcaZTgtQgWLSfVFXsWiokMXnPUoSmLZuISXhkHKCajNGanrZIsjVxkUYXPQVYJsjCGAQYAjrwMbtZiPJudeVOk="RYTuLbyfhbCMxkUqaitlSbMCxnRJZUYhYRxpoHkrTpwLPRIejAlJKVCfxBGFJCVazjAIWkOSELNWKFINKiJuuNDTqWuJSOmyFsCI";FAJVMEMMiDMdwtLcixuhgoDvLUEDfoWPbJEvtzEMUKDbKZlXkTTuoZKAIzHGrShrNxbTlaOhPahdUEnsYQVJZftNwLkQFLegekYn="ch";PSyEfusGAQjDIjEpTZlIGEAHAByQAYXFZrbJVgSnhfmHHODPiyVnoaMYStYdQMcazTCEnpXoEHFFKLpiUGXbGCqWUtTXsKhlhOxO="4";OvTpFYYBanKCCPbXtQRgHLNsvHpPXjMOlfdhrboahxrLzLomyxbOdRyswATPSohYcIznxgsbxyiwVcXYQoftbLYIovnHpkccicqQ="";JKuYqqRFPyVovClbZqGIiZBzRzyfzBJRZjLdNVYaAAZKtIDQYdvuocAnJaMKSCLCfijTpgSOoJTGnTMVNdPsYvmVlimLMeERyHsd="TVWIfEOleVnDTVJPcgPqzZNIncywZoNPNadkeVVnXzLgjIGqvgDBndibWAvHMARWtyztNXIqqksyROnQnPOsDeweyVyiBbZsgQsW";OndAWNCAhCUrBryKxIDmyvHmzJKPdQmvWzePMcTRrycKDGnZAwdzLPosoqBkhiaLjMeKWgcfAShGvxFhrmljRDlguHWqLUHKyHzo=" = | r";FGedKrLWRQDPQRBzKizKtNqDECvFrmthfFCbLZqMmdFEJraBbCMXqSkuBsyHRjLXYTmioRsQNrAAvQoNfeOcKEznEiLorMgMGeLd="LdRWCvutbedaWiisBlLwjnQGYPhwCBBZNjHUBhGerGxyYMmGleReeZrTNuWRYLlWDTTBXVdjGfbwHRGkaNJuWVBfBhllGfHPdrTb";mLHsaLWBJwNnYAbMMUpbjwKvpznfrdllhyLkSCQuCPzUFegTUopxorEsRiJizyEBskQoCSJwSkgKMsTvmVYIixGLmTQjxwGrIdza="";jTMmVWwwXFGIjYYqTLuapGccKGsljEUFyiuVWEzmYJRisIzefMeHChxsOvVtkDtQnGFfRkLYHCqytfxwEeoXDxPrjtDKtKwtZuxm="as";FJMOgFPBvskwbzWQoxhTmItGNnkqjzPPteKEhLMNfJYSayycSCKeFrEgBhHRuIzRRlrOVlsGyfxACXdrqJEZMzslXAXOMoAWJiRa="mpNZulswFkDvKMdIFkrPAdYNAbwuhCqLCnAjihJoHlrnTbzxCsIdSFORgPwFXItjkeVKONKCOEDJIYniPhkgFgbWDMmvReImxcuv";vJPpWkUZHLfMCnmkKWhFdVCyxJOfyWZfpDragXhCdJBAQfRfzPLcFMoZnfNioteQWFdyKdYuvzrkHakuiyLaOzwfwiPWHywERpQZ="ypEzfKFODcCkTGrwHwzQvpIBnTahRuaEvNxbTIfPhKYEoRNyCrSXblSHcXPsKjexzMDrlGiLcOFuxXWPlIgMiALaSSDSKcHMYQDb";GBNjLXUMRjObBVEemcXWVYatmERGYldQHxxXIIMDqKMmIlBgEeKyCWJznfDjTpMCgLlsSVOghpKoEDCrStNVGqIpehrWJFcrbQCw="o";YlWTkScStZVcoNEebBqkuYLGLegJDnXEMGZMEPkBxkVEcKWcyBIujRbcFODUIztIqFOTvtOUNERcSIXappTMgauCvjEzKiLImoPl="6";wlwKpgpoWeZwucnSvmkwhjKtBcEPojAiUUDExnVhVBjsZkidSIZbITdcVVGpLAtfHlegsUOYGjFRUDSKpvFPzxUKAeIpGxIPblui="SPnAySFEfkQIikauhdxtFzpipdiJtHNrzbSWsWRlnDAqYzbzmVdduaKaLWUKhExyPGitGHXPiDUdhmBaUiQsZgXFGKvEYOdonRyk";ZlguhgUwafzNWMpttDFfDhImFdTdIjYlXkqTyrjNdPfQgOxfVPBxYojynZbEuwtPqyxVJTrSleSzrOjJCyEoCcsBxeTsEcSusbNe=" -d";WYqlazFbrlUJWCRTsGosMDyUOuqIdUZONiXDMNGzzhyxNhxAjtjarLCXDqDerqsccsOcBGxHwtrZaShQwMTOqFOLjnUaktvmKkZo="lvRUAgTGbDZmNzeqJuRwFhOSORqxAOmpNxXycSbSPPEKSoTFokjAcnTJjdtqNIidXTwBhArDOFWyMaihGdLwOgTLMqjamENDjOEa";hZaOxqDIYMlygTSoHKLkoziBzNRKzKABNMNAXthPSNPYULiJrmArMYuHIpLGHWYQFFoGNkUiYgvtFAPUPtSmMoCVfgIMPkrFSkrS="";SLuGvxIGmuLjSecQNtpuXIGulokuokmSWTUrJvBZdsuWmiVcpKtSYxQVTeGjpTJUzSJavEsSfsrdYtzRHXxOWOHHcIYZtXPIXKZT="b";FlemrCKafsthGWkxlBpcnsNlJUJrRoEPeJpwSEajBkSfQInfHSepoQMeInmTbWmoDUrCVUrYpwDdyOVQZZqnaUdJLDZiLWfcaXjD="e";NWqvrrLEWpzKvcigUUpYuxufZtAmOgNCzgpMgzthbyvTdCVQZmaLxflHDUFRPMuopQUzQsNlbqjJbifNOrocwJoHyFLIFCfOIARO="v |";Tx=Eds;LDQESuflhyqFRBRysgrrxPJqqhEIAmOOwxSNjRFlwFdZLNRmaTMQLAjVTccFsWIJzXtsDNcaEKPDjhAClPxIiDiHBEyejqKylqAS="";LCVjPXqQEcmotgmjwfMVkpiesTqNvwIrQkixnIpxFNlfhpawxXLTSQXFSROBwKMyilcTqrYZXDQOWuRTqnhHauhwMmRmJfoDrUiK=$(eval "$mLHsaLWBJwNnYAbMMUpbjwKvpznfrdllhyLkSCQuCPzUFegTUopxorEsRiJizyEBskQoCSJwSkgKMsTvmVYIixGLmTQjxwGrIdza$FlemrCKafsthGWkxlBpcnsNlJUJrRoEPeJpwSEajBkSfQInfHSepoQMeInmTbWmoDUrCVUrYpwDdyOVQZZqnaUdJLDZiLWfcaXjD$FAJVMEMMiDMdwtLcixuhgoDvLUEDfoWPbJEvtzEMUKDbKZlXkTTuoZKAIzHGrShrNxbTlaOhPahdUEnsYQVJZftNwLkQFLegekYn$OvTpFYYBanKCCPbXtQRgHLNsvHpPXjMOlfdhrboahxrLzLomyxbOdRyswATPSohYcIznxgsbxyiwVcXYQoftbLYIovnHpkccicqQ$GBNjLXUMRjObBVEemcXWVYatmERGYldQHxxXIIMDqKMmIlBgEeKyCWJznfDjTpMCgLlsSVOghpKoEDCrStNVGqIpehrWJFcrbQCw$OndAWNCAhCUrBryKxIDmyvHmzJKPdQmvWzePMcTRrycKDGnZAwdzLPosoqBkhiaLjMeKWgcfAShGvxFhrmljRDlguHWqLUHKyHzo$FlemrCKafsthGWkxlBpcnsNlJUJrRoEPeJpwSEajBkSfQInfHSepoQMeInmTbWmoDUrCVUrYpwDdyOVQZZqnaUdJLDZiLWfcaXjD$NWqvrrLEWpzKvcigUUpYuxufZtAmOgNCzgpMgzthbyvTdCVQZmaLxflHDUFRPMuopQUzQsNlbqjJbifNOrocwJoHyFLIFCfOIARO$mLHsaLWBJwNnYAbMMUpbjwKvpznfrdllhyLkSCQuCPzUFegTUopxorEsRiJizyEBskQoCSJwSkgKMsTvmVYIixGLmTQjxwGrIdza$SLuGvxIGmuLjSecQNtpuXIGulokuokmSWTUrJvBZdsuWmiVcpKtSYxQVTeGjpTJUzSJavEsSfsrdYtzRHXxOWOHHcIYZtXPIXKZT$LDQESuflhyqFRBRysgrrxPJqqhEIAmOOwxSNjRFlwFdZLNRmaTMQLAjVTccFsWIJzXtsDNcaEKPDjhAClPxIiDiHBEyejqKylqAS$jTMmVWwwXFGIjYYqTLuapGccKGsljEUFyiuVWEzmYJRisIzefMeHChxsOvVtkDtQnGFfRkLYHCqytfxwEeoXDxPrjtDKtKwtZuxm$FlemrCKafsthGWkxlBpcnsNlJUJrRoEPeJpwSEajBkSfQInfHSepoQMeInmTbWmoDUrCVUrYpwDdyOVQZZqnaUdJLDZiLWfcaXjD$YlWTkScStZVcoNEebBqkuYLGLegJDnXEMGZMEPkBxkVEcKWcyBIujRbcFODUIztIqFOTvtOUNERcSIXappTMgauCvjEzKiLImoPl$OvTpFYYBanKCCPbXtQRgHLNsvHpPXjMOlfdhrboahxrLzLomyxbOdRyswATPSohYcIznxgsbxyiwVcXYQoftbLYIovnHpkccicqQ$PSyEfusGAQjDIjEpTZlIGEAHAByQAYXFZrbJVgSnhfmHHODPiyVnoaMYStYdQMcazTCEnpXoEHFFKLpiUGXbGCqWUtTXsKhlhOxO$ZlguhgUwafzNWMpttDFfDhImFdTdIjYlXkqTyrjNdPfQgOxfVPBxYojynZbEuwtPqyxVJTrSleSzrOjJCyEoCcsBxeTsEcSusbNe$LDQESuflhyqFRBRysgrrxPJqqhEIAmOOwxSNjRFlwFdZLNRmaTMQLAjVTccFsWIJzXtsDNcaEKPDjhAClPxIiDiHBEyejqKylqAS");eval "$hZaOxqDIYMlygTSoHKLkoziBzNRKzKABNMNAXthPSNPYULiJrmArMYuHIpLGHWYQFFoGNkUiYgvtFAPUPtSmMoCVfgIMPkrFSkrS$LCVjPXqQEcmotgmjwfMVkpiesTqNvwIrQkixnIpxFNlfhpawxXLTSQXFSROBwKMyilcTqrYZXDQOWuRTqnhHauhwMmRmJfoDrUiK$mLHsaLWBJwNnYAbMMUpbjwKvpznfrdllhyLkSCQuCPzUFegTUopxorEsRiJizyEBskQoCSJwSkgKMsTvmVYIixGLmTQjxwGrIdza$OvTpFYYBanKCCPbXtQRgHLNsvHpPXjMOlfdhrboahxrLzLomyxbOdRyswATPSohYcIznxgsbxyiwVcXYQoftbLYIovnHpkccicqQ"